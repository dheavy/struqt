{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///struqt.min.js","webpack:///webpack/bootstrap ce7eb1cb11df8b0067e8","webpack:///external \"babel-polyfill\"","webpack:///./src/linkedlists/singly.js","webpack:///external \"deep-equal\"","webpack:///./src/linkedlists/doubly.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","__WEBPACK_EXTERNAL_MODULE_3__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_arguments","arguments","areEquals","List","undefined","clear","prototype","add","data","node","next","size","tail","head","oldTail","addAll","forEach","addAtIndex","index","prev","RangeError","cursor","current","addAllAtIndex","slice","endNode","weave","i","nodes","length","push","get","remove","deleted","contains","shift","pop","set","clone","Object","assign","toArray","a"],"mappings":"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","file":"struqt.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"babel-polyfill\"), require(\"deep-equal\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"struqt\", [\"babel-polyfill\", \"deep-equal\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"struqt\"] = factory(require(\"babel-polyfill\"), require(\"deep-equal\"));\n\telse\n\t\troot[\"struqt\"] = factory(root[\"babel-polyfill\"], root[\"deep-equal\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"babel-polyfill\"), require(\"deep-equal\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"struqt\", [\"babel-polyfill\", \"deep-equal\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"struqt\"] = factory(require(\"babel-polyfill\"), require(\"deep-equal\"));\n\telse\n\t\troot[\"struqt\"] = factory(root[\"babel-polyfill\"], root[\"deep-equal\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\t__webpack_require__(2);\n\tmodule.exports = __webpack_require__(4);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"babel-polyfill\");\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _arguments = arguments;\n\tvar areEquals = __webpack_require__(3);\n\t\n\t/**\n\t * Singly linked list.\n\t * Its instances contain nodes that are plain old JavaScript objects.\n\t * These nodes have a `data` field containing any value, and a `next` field,\n\t * which points to the next node in line of nodes.\n\t *\n\t * @constructor\n\t */\n\tvar List = function List() {\n\t  undefined.clear();\n\t};\n\t\n\t/**\n\t * Append data to a new node at the end of the list.\n\t *\n\t * @param  {*}      data  Any type of data.\n\t * @return {Object} The new node.\n\t */\n\tList.prototype.add = function (data) {\n\t  var node = { data: data, next: null };\n\t\n\t  if (undefined.size === 0) {\n\t    undefined.tail = node;\n\t    undefined.head.next = node;\n\t    undefined.size++;\n\t    return node;\n\t  }\n\t\n\t  var oldTail = undefined.tail;\n\t  oldTail.next = node;\n\t  undefined.tail = node;\n\t  undefined.size++;\n\t\n\t  return node;\n\t};\n\t\n\t/**\n\t * Append any numbers of elements as new nodes at the end of the list.\n\t *\n\t * @param  {*} ...data  Any numbers of any type of data.\n\t * @return {Object} The last inserted node (tail).\n\t */\n\tList.prototype.addAll = function () {\n\t  [].forEach.call(_arguments, function (data) {\n\t    return undefined.add(data);\n\t  });\n\t  return undefined.tail;\n\t};\n\t\n\t/**\n\t * Append data to a new node placed at the given index of the list.\n\t * Previous owner of this index becomes next in line after the new node.\n\t *\n\t * @param  {integer} index    The index at which the new node should be inserted.\n\t * @param  {*}       element  Any object to be used as data for the node.\n\t * @throws {RangeError} If index is out of bounds.\n\t * @return {Object} The newly created node.\n\t */\n\tList.prototype.addAtIndex = function (index, data) {\n\t  var prev = void 0;\n\t\n\t  if (undefined.size === 0 || index < 1 || index > undefined.size) {\n\t    throw new RangeError('index is out of range');\n\t  }\n\t\n\t  if (index === 1) {\n\t    prev = undefined.head;\n\t  }\n\t\n\t  var cursor = 1;\n\t  var current = undefined.head.next;\n\t\n\t  while (current < index) {\n\t    prev = current;\n\t    current = current.next;\n\t    cursor++;\n\t  }\n\t\n\t  var node = { data: data, next: current };\n\t  prev.next = node;\n\t\n\t  return node;\n\t};\n\t\n\t/**\n\t * Append any number of data to new nodes placed at the given index.\n\t * Previous owner of the index becomes next in line after the latest\n\t * new node.\n\t *\n\t * @param  {integer} index    The index at which the new node should be inserted.\n\t * @param  {*}       ...data  Any number of any type of data.\n\t * @throws {RangeError} If index is out of bounds.\n\t * @return {Object} The last of the newly created node.\n\t */\n\tList.prototype.addAllAtIndex = function () {\n\t  var index = +[].slice.call(_arguments, 0, 1);\n\t\n\t  if (undefined.size === 0 || index < 1 || index > undefined.size) {\n\t    throw new RangeError('index is out of range');\n\t  }\n\t\n\t  var prev = undefined.head;\n\t  var current = undefined.head.next;\n\t  var cursor = 1;\n\t  var data = [].slice.call(_arguments, 1);\n\t\n\t  while (cursor < index) {\n\t    prev = current;\n\t    current = current.next;\n\t    if (!current) {\n\t      undefined.tail = prev;\n\t    }\n\t    cursor++;\n\t  }\n\t\n\t  // Create array of newly created nodes from data.\n\t  // Process recursively and return reference to the latest\n\t  // node created when done.\n\t  var endNode = function weave(i, nodes, data, prev, current) {\n\t    if (i === nodes.length - 1) {\n\t      // Transplant both ends of array of new nodes to existing linked list.\n\t      prev.next = nodes[0];\n\t      var _endNode = nodes[i];\n\t      _endNode.next = current;\n\t\n\t      // Kill references of nodes and return latest one.\n\t      nodes = null;\n\t      return _endNode;\n\t    }\n\t\n\t    // Build node and link reference with previous one.\n\t    var node = { data: nodes[i], next: null };\n\t    if (i > 0) {\n\t      nodes[i - 1].next = node;\n\t    }\n\t\n\t    // Store node and repeat.\n\t    nodes.push(node);\n\t    weave(++i, nodes, data, prev, current);\n\t  }(0, [], data, prev, current);\n\t\n\t  undefined.size += data.length;\n\t  return endNode;\n\t};\n\t\n\t/**\n\t * Return the node at the specified position.\n\t *\n\t * @param  {integer}    index   The index to look for.\n\t * @throws {RangeError} If index is out of bounds.\n\t * @return {Object}  The node at the requested index.\n\t */\n\tList.prototype.get = function (index) {\n\t  if (undefined.size === 0 || index < 1 || index > undefined.size) {\n\t    throw new RangeError('index is out of range');\n\t  }\n\t\n\t  var cursor = 1;\n\t  var current = undefined.head.next;\n\t\n\t  if (cursor === index) {\n\t    return current;\n\t  }\n\t\n\t  while (cursor < index) {\n\t    current = current.next;\n\t    cursor++;\n\t  }\n\t\n\t  return current;\n\t};\n\t\n\t/**\n\t * Remove the element at a given index.\n\t *\n\t * @param  {integer} index  The index of the node to remove.\n\t * @throws {RangeError} If index is out of bounds.\n\t * @return {Object}  The deleted node.\n\t */\n\tList.prototype.remove = function (index) {\n\t  if (undefined.size === 0 || index < 1 || index > undefined.size) {\n\t    throw new RangeError('index is out of range');\n\t  }\n\t\n\t  var cursor = 1;\n\t  var prev = undefined.head;\n\t  var current = undefined.head.next;\n\t  var next = current.next;\n\t\n\t  while (cursor < index) {\n\t    prev = current;\n\t    current = current.next;\n\t    next = current.next;\n\t    cursor++;\n\t  }\n\t\n\t  var deleted = current;\n\t  prev.next = next;\n\t  if (!next) {\n\t    undefined.tail = prev;\n\t  }\n\t  current = null;\n\t  undefined.size--;\n\t\n\t  return deleted;\n\t};\n\t\n\t/**\n\t * Return true if this list contains a node holding the specified data.\n\t *\n\t * @param  {*} data  The data to look for within nodes.\n\t * @return {boolean}  True if the data was found in a node.\n\t */\n\tList.prototype.contains = function (data) {\n\t  var current = undefined.head.next;\n\t\n\t  if (areEquals(current.data, data)) {\n\t    return true;\n\t  }\n\t\n\t  var cursor = 1;\n\t  while (cursor < undefined.size) {\n\t    current = current.next;\n\t    if (areEquals(current.data, data)) {\n\t      return true;\n\t    }\n\t    cursor++;\n\t  }\n\t\n\t  return false;\n\t};\n\t\n\t/**\n\t * Remove and return the first node.\n\t *\n\t * @return {Object} The removed node.\n\t */\n\tList.prototype.shift = function () {\n\t  return undefined.remove(1);\n\t};\n\t\n\t/**\n\t * Remove and return the last node.\n\t *\n\t * @return {Object} The removed node.\n\t */\n\tList.prototype.pop = function () {\n\t  return undefined.remove(undefined.size);\n\t};\n\t\n\t/**\n\t * Replace data in the node at specified position.\n\t *\n\t * @param  {integer} index  The index of the node to edit.\n\t * @param  {*}       data   Any data to update the node's data field.\n\t * @return {void}\n\t */\n\tList.prototype.set = function (index, data) {\n\t  undefined.get(index).data = data;\n\t};\n\t\n\t/**\n\t * Return a shallow copy of the list.\n\t *\n\t * @return {Object} A singly linked list instance with copied nodes and data.\n\t */\n\tList.prototype.clone = function () {\n\t  return Object.assign({}, undefined);\n\t};\n\t\n\t/**\n\t * Return an array compiling data from all nodes in the list.\n\t *\n\t * @return {Array}  An array of data based on the actual nodes' data.\n\t */\n\tList.prototype.toArray = function () {\n\t  var current = undefined.head.next;\n\t  var cursor = 1;\n\t  var a = [];\n\t\n\t  while (cursor < undefined.size) {\n\t    a.push(current.data);\n\t    current = current.next;\n\t    cursor++;\n\t  }\n\t\n\t  return a;\n\t};\n\t\n\t/**\n\t * Remove all elements from the list and reseat its head.\n\t *\n\t * @return {void}\n\t */\n\tList.prototype.clear = function () {\n\t  undefined.head = { next: null };\n\t  undefined.tail = null;\n\t  undefined.size = 0;\n\t};\n\t\n\tmodule.exports = List;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"deep-equal\");\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar List = function List() {\n\t  undefined.clear();\n\t};\n\t\n\tmodule.exports = List;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// struqt.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ce7eb1cb11df8b0067e8","module.exports = require(\"babel-polyfill\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-polyfill\"\n// module id = 1\n// module chunks = 0","const areEquals = require('deep-equal');\n\n/**\n * Singly linked list.\n * Its instances contain nodes that are plain old JavaScript objects.\n * These nodes have a `data` field containing any value, and a `next` field,\n * which points to the next node in line of nodes.\n *\n * @constructor\n */\nconst List = () => {\n  this.clear();\n};\n\n/**\n * Append data to a new node at the end of the list.\n *\n * @param  {*}      data  Any type of data.\n * @return {Object} The new node.\n */\nList.prototype.add = data => {\n  const node = {data, next: null};\n\n  if (this.size === 0) {\n    this.tail = node;\n    this.head.next = node;\n    this.size++;\n    return node;\n  }\n\n  const oldTail = this.tail;\n  oldTail.next = node;\n  this.tail = node;\n  this.size++;\n\n  return node;\n};\n\n/**\n * Append any numbers of elements as new nodes at the end of the list.\n *\n * @param  {*} ...data  Any numbers of any type of data.\n * @return {Object} The last inserted node (tail).\n */\nList.prototype.addAll = () => {\n  [].forEach.call(arguments, data => this.add(data));\n  return this.tail;\n};\n\n/**\n * Append data to a new node placed at the given index of the list.\n * Previous owner of this index becomes next in line after the new node.\n *\n * @param  {integer} index    The index at which the new node should be inserted.\n * @param  {*}       element  Any object to be used as data for the node.\n * @throws {RangeError} If index is out of bounds.\n * @return {Object} The newly created node.\n */\nList.prototype.addAtIndex = (index, data) => {\n  let prev;\n\n  if (this.size === 0 || index < 1 || index > this.size) {\n    throw new RangeError('index is out of range');\n  }\n\n  if (index === 1) {\n    prev = this.head;\n  }\n\n  let cursor = 1;\n  let current = this.head.next;\n\n  while (current < index) {\n    prev = current;\n    current = current.next;\n    cursor++;\n  }\n\n  const node = {data, next: current};\n  prev.next = node;\n\n  return node;\n};\n\n/**\n * Append any number of data to new nodes placed at the given index.\n * Previous owner of the index becomes next in line after the latest\n * new node.\n *\n * @param  {integer} index    The index at which the new node should be inserted.\n * @param  {*}       ...data  Any number of any type of data.\n * @throws {RangeError} If index is out of bounds.\n * @return {Object} The last of the newly created node.\n */\nList.prototype.addAllAtIndex = () => {\n  let index = +[].slice.call(arguments, 0, 1);\n\n  if (this.size === 0 || index < 1 || index > this.size) {\n    throw new RangeError('index is out of range');\n  }\n\n  let prev = this.head;\n  let current = this.head.next;\n  let cursor = 1;\n  let data = [].slice.call(arguments, 1);\n\n  while (cursor < index) {\n    prev = current;\n    current = current.next;\n    if (!current) {\n      this.tail = prev;\n    }\n    cursor++;\n  }\n\n  // Create array of newly created nodes from data.\n  // Process recursively and return reference to the latest\n  // node created when done.\n  const endNode = (function weave(i, nodes, data, prev, current) {\n    if (i === nodes.length - 1) {\n      // Transplant both ends of array of new nodes to existing linked list.\n      prev.next = nodes[0];\n      const endNode = nodes[i];\n      endNode.next = current;\n\n      // Kill references of nodes and return latest one.\n      nodes = null;\n      return endNode;\n    }\n\n    // Build node and link reference with previous one.\n    const node = {data: nodes[i], next: null};\n    if (i > 0) {\n      nodes[i - 1].next = node;\n    }\n\n    // Store node and repeat.\n    nodes.push(node);\n    weave(++i, nodes, data, prev, current);\n  })(0, [], data, prev, current);\n\n  this.size += data.length;\n  return endNode;\n};\n\n/**\n * Return the node at the specified position.\n *\n * @param  {integer}    index   The index to look for.\n * @throws {RangeError} If index is out of bounds.\n * @return {Object}  The node at the requested index.\n */\nList.prototype.get = index => {\n  if (this.size === 0 || index < 1 || index > this.size) {\n    throw new RangeError('index is out of range');\n  }\n\n  let cursor = 1;\n  let current = this.head.next;\n\n  if (cursor === index) {\n    return current;\n  }\n\n  while (cursor < index) {\n    current = current.next;\n    cursor++;\n  }\n\n  return current;\n};\n\n/**\n * Remove the element at a given index.\n *\n * @param  {integer} index  The index of the node to remove.\n * @throws {RangeError} If index is out of bounds.\n * @return {Object}  The deleted node.\n */\nList.prototype.remove = index => {\n  if (this.size === 0 || index < 1 || index > this.size) {\n    throw new RangeError('index is out of range');\n  }\n\n  let cursor = 1;\n  let prev = this.head;\n  let current = this.head.next;\n  let next = current.next;\n\n  while (cursor < index) {\n    prev = current;\n    current = current.next;\n    next = current.next;\n    cursor++;\n  }\n\n  const deleted = current;\n  prev.next = next;\n  if (!next) {\n    this.tail = prev;\n  }\n  current = null;\n  this.size--;\n\n  return deleted;\n};\n\n/**\n * Return true if this list contains a node holding the specified data.\n *\n * @param  {*} data  The data to look for within nodes.\n * @return {boolean}  True if the data was found in a node.\n */\nList.prototype.contains = data => {\n  let current = this.head.next;\n\n  if (areEquals(current.data, data)) {\n    return true\n  }\n\n  let cursor = 1;\n  while (cursor < this.size) {\n    current = current.next;\n    if (areEquals(current.data, data)) {\n      return true;\n    }\n    cursor++;\n  }\n\n  return false;\n};\n\n/**\n * Remove and return the first node.\n *\n * @return {Object} The removed node.\n */\nList.prototype.shift = () => {\n  return this.remove(1);\n};\n\n\n/**\n * Remove and return the last node.\n *\n * @return {Object} The removed node.\n */\nList.prototype.pop = () => {\n  return this.remove(this.size);\n};\n\n/**\n * Replace data in the node at specified position.\n *\n * @param  {integer} index  The index of the node to edit.\n * @param  {*}       data   Any data to update the node's data field.\n * @return {void}\n */\nList.prototype.set = (index, data) => {\n  this.get(index).data = data;\n};\n\n/**\n * Return a shallow copy of the list.\n *\n * @return {Object} A singly linked list instance with copied nodes and data.\n */\nList.prototype.clone = () => {\n  return Object.assign({}, this);\n};\n\n/**\n * Return an array compiling data from all nodes in the list.\n *\n * @return {Array}  An array of data based on the actual nodes' data.\n */\nList.prototype.toArray = () => {\n  let current = this.head.next;\n  let cursor = 1;\n  let a = [];\n\n  while (cursor < this.size) {\n    a.push(current.data);\n    current = current.next;\n    cursor++;\n  }\n\n  return a;\n};\n\n/**\n * Remove all elements from the list and reseat its head.\n *\n * @return {void}\n */\nList.prototype.clear = () => {\n  this.head = {next: null};\n  this.tail = null;\n  this.size = 0;\n};\n\nmodule.exports = List;\n\n\n\n// WEBPACK FOOTER //\n// ./src/linkedlists/singly.js","module.exports = require(\"deep-equal\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"deep-equal\"\n// module id = 3\n// module chunks = 0","const List = () => {\n  this.clear();\n};\n\nmodule.exports = List;\n\n\n\n// WEBPACK FOOTER //\n// ./src/linkedlists/doubly.js"],"sourceRoot":""}